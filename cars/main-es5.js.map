{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/car.service.ts","webpack:///src/app/car/car.component.ts","webpack:///src/app/car/car.component.html","webpack:///src/app/car/car.ts","webpack:///src/app/carz/carz.component.ts","webpack:///src/app/carz/carz.component.html","webpack:///src/app/condition/condition.component.ts","webpack:///src/app/condition/condition.component.html","webpack:///src/app/condition/condition.ts","webpack:///src/app/in-memory-data.service.ts","webpack:///src/app/location/location.component.ts","webpack:///src/app/location/location.component.html","webpack:///src/app/location/location.ts","webpack:///src/app/testdata/car.ts","webpack:///src/app/testdata/carz.ts","webpack:///src/app/testdata/condition.ts","webpack:///src/app/testdata/location.ts","webpack:///src/app/testdata/sample.ts","webpack:///src/app/testdata/testfunctions.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","dataEncapsulation","declarations","providers","bootstrap","CarService","http","carzUrl","httpOptions","headers","carz","get","car","put","providedIn","CarComponent","location","route","getCar","snapshot","paramMap","subscribe","back","updateCar","goBack","Car","rndNumND","locationz","conditionz","hi","low","Math","floor","random","CarzComponent","carService","router","getCarz","selectedCar","navigate","filter","c","deleteCar","add","accident","rating","ConditionComponent","update","Condition","InMemoryDataService","td","condition","length","max","map","name","city","province","distance","LocationComponent","Location","CarTestData","randomNumND","randomText","make","model","year","mileage","price","randomNum2D","color","CarzTestData","i","push","ConditionTestData","LocationTestData","SampleTextFunction","sample","getText","size","start","end","substring","TestFunctions","quartermonth","m","quarteryear","y","randomUpTxt","toUpperCase","randomLoTxt","toLowerCase","randomTextOld","result","characters","charactersLength","charAt","randomUpTxtOld","randomLoTxtOld","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CarComponent } from './car/car.component'\nimport { CarzComponent } from './carz/carz.component'\nimport { LocationComponent } from './location/location.component'\nimport { ConditionComponent } from './condition/condition.component'\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/carz', pathMatch: 'full' },\n  { path: 'location/:id', component: LocationComponent} ,\n  { path: 'condition/:id', component: ConditionComponent} ,\n  \n  { path: 'carz', component: CarzComponent },\n  { path: 'car/:id', component: CarComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cars';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { CarComponent } from './car/car.component'\nimport { CarzComponent } from './carz/carz.component'\nimport { LocationComponent } from './location/location.component'\nimport { ConditionComponent } from './condition/condition.component'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './in-memory-data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LocationComponent,\n    ConditionComponent,\n    \n    CarComponent,\n    CarzComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Car} from './car/car'\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarService {\n  private carzUrl = 'api/carz';\n  carz: Car[];\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) { this.carz = []; }\n\n  getCarz(): Observable<Car[]> {\n    return this.http.get<Car[]>(this.carzUrl)\n  }\n\n  getCar(id: number): Observable<Car> {\n    return this.http.get<Car>(this.carzUrl+'/'+id);\n  }\n\n  updateCar(car: Car): Observable<any> {\n    return this.http.put(this.carzUrl, car, this.httpOptions);\n  }\n\n  deleteCar(car: Car): Observable<Car> {\n    const id =  car.id;\n    return this.http.delete<Car>(this.carzUrl+'/'+id, this.httpOptions);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CarService } from '../car.service'\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Car } from './car'\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.css']\n})\nexport class CarComponent implements OnInit {\n  car: Car;\n  new: boolean;\n\n  constructor(private location: Location,\n    private route: ActivatedRoute,\n    private CarService: CarService) { \n  }\n\n  ngOnInit() {\n    this.getCar();\n  }\n\n  getCar(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    if (id==-1) {\n      this.car = new Car();\n      this.new = true;\n    } else {\n      this.new = false;\n      this.CarService.getCar(id)\n      .subscribe(car => this.car= car);\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  update() {\n    this.CarService.updateCar(this.car).subscribe();\n    this.location.back();\n  }\n\n  save() {\n    this.CarService.updateCar(this.car).subscribe();\n    this.location.back();\n  }\n}\n","<h2>CAR Information:</h2>\n<div *ngIf=\"car\" class=\"car\">\n    <!--<h3>CAR</h3>-->\n    <h3>{{car.name}}</h3>\n    <table>\n      <tr><td><label>name:<input [(ngModel)]=\"car.name\" placeholder=\"\"/></label></td></tr>\n      <tr><td><label>make:<input [(ngModel)]=\"car.make\" placeholder=\"\"/></label></td></tr>\n      <tr><td><label>model:<input [(ngModel)]=\"car.model\" placeholder=\"\"/></label></td></tr>\n      <tr><td><label>year:<input [(ngModel)]=\"car.year\" placeholder=\"\"/></label></td></tr>\n      <tr><td><label>mileage:<input [(ngModel)]=\"car.mileage\" placeholder=\"\"/></label></td></tr>\n      <tr><td><label>price:<input [(ngModel)]=\"car.price\" placeholder=\"\"/></label></td></tr>\n      <tr><td><label>color:<input [(ngModel)]=\"car.color\" placeholder=\"\"/></label></td></tr>\n      \n    </table>\n    <button  *ngIf=\"new==false\" (click)=\"update()\">Update</button>\n    <button  *ngIf=\"new==true\" (click)=\"save()\">Save</button>\n</div>\n<button (click)=\"goBack()\">GO BACK</button>\n\n","import {Location} from '../location/location'\nimport {Condition} from '../condition/condition'\n\n\nexport class Car {\n    public id: number;\n    public name : string;\n    public make : string;\n    public model : string;\n    public year : number;\n    public mileage : number;\n    public price : number;\n    public color : string;\n    public locationz : Location[];\n    public conditionz : Condition[];\n    \n\n    constructor() {\n        this.id = this.rndNumND(100000000, 1);\n        this.locationz = [new Location()];\n        this.conditionz = [new Condition()];\n        \n    }\n\n    rndNumND(hi: number, low: number) {\n        return Math.floor((low + Math.floor(Math.random() * (hi - low))));\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { CarService } from '../car.service'\nimport { Car } from '../car/car'\n\n@Component({\n  selector: 'app-carz',\n  templateUrl: './carz.component.html',\n  styleUrls: ['./carz.component.css']\n})\nexport class CarzComponent implements OnInit {\n  dc: Car[];\n  carz: Car[];\n  selectedCar: Car;\n\n  constructor(  private location: Location,\n    private route: ActivatedRoute,\n    private carService: CarService,\n    private router: Router) {\n   }\n\n  ngOnInit() {\n    this.getCarz();\n  }\n\n  onSelect(car: Car) {\n    this.selectedCar = car;\n  }\n\n  getCarz(): void {\n    this.carService.getCarz().subscribe(carz => this.carz = carz);\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n\n  add(): void {\n    this.router.navigate(['/car/-1']);\n  }\n\n  delete(car: Car) {\n    this.carz = this.carz.filter(c => c !== car);\n    this.carService.deleteCar(car).subscribe();\n  }\n\n  setSizeSort() {\n    \n  }\n}\n","<table id=\"sts\">   \n    <tr>\n        <th>CAR: NAME</th>\n        <th>LOCATION: NAME</th>\n        <th>CONDITION: ACCIDENT</th>\n        \n        <th></th>\n    </tr>\n    <tr *ngFor=\"let car of carz\"\n    [class.selected]=\"car === selectedCar\">\n        <td routerLink=\"/car/{{car.id}}\" routerLinkActive=\"router-link-active\">{{car.name}}</td>\n        <td routerLink=\"/location/{{car.id}}\" routerLinkActive=\"router-link-active\">{{car.locationz[0].name}}</td>\n        <td routerLink=\"/condition/{{car.id}}\" routerLinkActive=\"router-link-active\">{{car.conditionz[0].accident}}</td>\n        \n        <td><button (click)=\"delete(car)\">Delete</button></td>\n    </tr>\n</table>\n<button (click)=\"add()\">Add</button>\n<button (click)=\"goBack()\">GO BACK</button>","import { Component, OnInit } from '@angular/core';\nimport { Car } from '../car/car'\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { CarService } from '../car.service'\n\n@Component({\n  selector: 'app-condition',\n  templateUrl: './condition.component.html',\n  styleUrls: ['./condition.component.css']\n})\nexport class ConditionComponent implements OnInit {\n  car: Car;\n\n  constructor(private location: Location,\n     private route: ActivatedRoute,\n     private CarService: CarService) { \n\n  }\n\n  ngOnInit() {\n    this.getCar();\n  }\n\n  getCar(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.CarService.getCar(id)\n      .subscribe(car => this.car = car);\n  }\n\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  update() {\n    this.CarService.updateCar(this.car).subscribe();\n    this.location.back();\n  }\n\n}\n","<h2>CONDITION Information</h2>\n<div *ngIf=\"car.conditionz\">\n  <h3>{{car.conditionz[0].accident}}</h3>\n  <div class=\"condition\">\n  <table>\n    <!--<tr><td><label>Id:<input [(ngModel)]=\"car.conditionz[0].id\" placeholder=\"\"/></label></td></tr>-->\n    <tr><td><label>accident:<input [(ngModel)]=\"car.conditionz[0].accident\" placeholder=\"\"/></label></td></tr>\n    <tr><td><label>rating:<input [(ngModel)]=\"car.conditionz[0].rating\" placeholder=\"\"/></label></td></tr>\n    \n  </table>\n  </div>\n</div>\n<button (click)=\"update()\">Update</button>\n<button (click)=\"goBack()\">GO BACK</button>\n","export class Condition {\n    public id : number;\n    public accident : string;\n    public rating : string;\n    \n    constructor() {\n    }\n}","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { Car} from './car/car';\nimport { CarzTestData } from './testdata/carz'\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const td = new CarzTestData();\n    const carz = td.carz;\n    const location = td.locationz;\n    const condition = td.conditionz;\n    return {location, condition, carz};\n  }\n\n  // Overrides the genId method to ensure that a hero always has an id.\n  // If the heroes array is empty,\n  // the method below returns the initial number (11).\n  // if the heroes array is not empty, the method below returns the highest\n  // hero id + 1.\n  genId(carz: Car[]): number {\n    return carz.length > 0 ? Math.max(...carz.map(car => car.id)) + 1 : 1;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Car } from '../car/car'\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { CarService } from '../car.service'\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css']\n})\nexport class LocationComponent implements OnInit {\n  car: Car;\n\n  constructor(private location: Location,\n     private route: ActivatedRoute,\n     private CarService: CarService) { \n\n  }\n\n  ngOnInit() {\n    this.getCar();\n  }\n\n  getCar(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.CarService.getCar(id)\n      .subscribe(car => this.car = car);\n  }\n\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  update() {\n    this.CarService.updateCar(this.car).subscribe();\n    this.location.back();\n  }\n\n}\n","<h2>LOCATION Information</h2>\n<div *ngIf=\"car.locationz\">\n  <h3>{{car.locationz[0].name}}</h3>\n  <div class=\"location\">\n  <table>\n    <!--<tr><td><label>Id:<input [(ngModel)]=\"car.locationz[0].id\" placeholder=\"\"/></label></td></tr>-->\n    <tr><td><label>name:<input [(ngModel)]=\"car.locationz[0].name\" placeholder=\"\"/></label></td></tr>\n    <tr><td><label>city:<input [(ngModel)]=\"car.locationz[0].city\" placeholder=\"\"/></label></td></tr>\n    <tr><td><label>province:<input [(ngModel)]=\"car.locationz[0].province\" placeholder=\"\"/></label></td></tr>\n    <tr><td><label>distance:<input [(ngModel)]=\"car.locationz[0].distance\" placeholder=\"\"/></label></td></tr>\n    \n  </table>\n  </div>\n</div>\n<button (click)=\"update()\">Update</button>\n<button (click)=\"goBack()\">GO BACK</button>\n","export class Location {\n    public id : number;\n    public name : string;\n    public city : string;\n    public province : string;\n    public distance : number;\n    \n    constructor() {\n    }\n}","import * as tf from './testfunctions'\nimport {Car} from '../car/car';\n\nexport class CarTestData {\n    public car: Car\n\n    constructor() {\n        this.car = new Car();\n        this.car.id = tf.TestFunctions.randomNumND(1,100000000);\n        this.car.name = tf.TestFunctions.randomText(20);\n        this.car.make = tf.TestFunctions.randomText(20);\n        this.car.model = tf.TestFunctions.randomText(20);\n        this.car.year = tf.TestFunctions.randomNumND(1990,2020);\n        this.car.mileage = tf.TestFunctions.randomNumND(1,400);\n        this.car.price = tf.TestFunctions.randomNum2D(1,400);\n        this.car.color = tf.TestFunctions.randomText(10);\n\n    }\n}","import * as tf from './testfunctions'\nimport {Car} from '../car/car';\nimport {Location} from '../location/location'\nimport {Condition} from '../condition/condition'\n\nimport {CarTestData} from './car'\nimport {LocationTestData} from './location'\nimport {ConditionTestData} from './condition'\n\nexport class CarzTestData {\n    public carz: Car[];\n    public locationz : Location[];\n    public conditionz : Condition[];\n    \n    constructor() {\n        this.carz = [];\n        //this.locationz = [new Location()];\n        this.conditionz = [new Condition()];\n               \n        //x Car\n        for (var i=1; i<10; i++) {\n            //var company = new CompanyTestData().company\n            var car = new CarTestData().car\n\n            //var stock = new StockTestData().stock;\n            //this.stocks.push(stock);\n            //company.stock = stock\n            car.locationz = [new LocationTestData().location];\n            car.conditionz = [new ConditionTestData().condition];\n\n\n            this.carz.push(car);\n        }\n    }\n}","import * as tf from '../testdata/testfunctions'\nimport {Condition} from '../condition/condition';\n\nexport class ConditionTestData {\n    public condition: Condition\n\n    constructor() {\n        this.condition = new Condition();\n        this.condition.id = tf.TestFunctions.randomNumND(1,100000000);\n        this.condition.accident = tf.TestFunctions.randomText(3);\n        this.condition.rating = tf.TestFunctions.randomText(10);\n\n    }\n}","import * as tf from '../testdata/testfunctions'\nimport {Location} from '../location/location';\n\nexport class LocationTestData {\n    public location: Location\n\n    constructor() {\n        this.location = new Location();\n        this.location.id = tf.TestFunctions.randomNumND(1,100000000);\n        this.location.name = tf.TestFunctions.randomText(20);\n        this.location.city = tf.TestFunctions.randomText(20);\n        this.location.province = tf.TestFunctions.randomText(20);\n        this.location.distance = tf.TestFunctions.randomNumND(0,200);\n\n    }\n}","export module SampleTextFunction {\n    const sample =\"Why man he doth bestride the narrow world\"+\n    \"Like a Colossus and we petty men\"+\n    \"Walk under his huge legs and peep about\"+\n    \"To find ourselves dishonourable graves\"+\n    \"Men at some time are masters of their fates\"+\n    \"The fault dear Brutus is not in our stars \"+\n    \"But in ourselves that we are underlings\"+\n    \"Brutus and Caesar what should be in that Caesar \"+\n    \"Why should that name be sounded more than yours \"+\n    \"Write them together yours is as fair a name \"+\n    \"Sound them it doth become the mouth as well \"+\n    \"Weigh them it is as heavy  conjure with em \"+\n    \"Brutus will start a spirit as soon as Caesar\"+\n    \"Now in the names of all the gods at once \"+\n    \"Upon what meat doth this our Caesar feed \"+\n    \"That he is grown so great  Age thou art shamed!\"+\n    \"Rome thou hast lost the breed of noble bloods!\"+\n    \"When went there by an age since the great flood \"+\n    \"But it was famed with more than with one man \"+\n    \"When could they say till now that talkd of Rome \"+\n    \"That her wide walls encompassd but one man \"+\n    \"Now is it Rome indeed and room enough \"+\n    \"When there is in it but one only man\"+\n    \"O you and I have heard our fathers say \"+\n    \"There was a Brutus once that would have brookd\"+\n    \"The eternal devil to keep his state in Rome\"+\n    \"As easily as a king\"\n    export function getText(size: number) {\n        let start = Math.floor(Math.random() * sample.length- size)\n        let end = start + size\n        return sample.substring(start, end)\n    }\n}\n","import * as sample from './sample'\nexport module TestFunctions {\n    export function quartermonth(m: number) {\n        return 3*(m-(Math.floor(m/4)*4))+1;\n    }\n\n    export function quarteryear(y: number) {\n        return 2021-Math.floor(y/4);\n    }\n\n    export function randomText(length: number) {\n        return sample.SampleTextFunction.getText(length);\n    }\n\n    export function randomUpTxt(length: number) {\n        return sample.SampleTextFunction.getText(length).toUpperCase();\n    }\n\n    export function randomLoTxt(length: number) {\n        return sample.SampleTextFunction.getText(length).toLowerCase();\n    }\n\n    export function randomTextOld(length: number) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 ';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    export function randomUpTxtOld(length: number) {\n        var result           = '';\n        var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    export function randomLoTxtOld(length: number) {\n        var result           = '';\n        var characters       = 'abcdefghijklmnopqrstuvwxyz';\n        var charactersLength = characters.length;\n        for ( var i = 0; i < length; i++ ) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n        }\n        return result;\n    }\n\n    export function randomNum2D(low: number, hi: number) {\n        return Math.floor((low + Math.floor(Math.random()*100 * (hi - low))))/100;\n    }\n\n    export function randomNumND(low: number, hi: number) {\n        return Math.floor((low + Math.floor(Math.random() * (hi - low))));\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}